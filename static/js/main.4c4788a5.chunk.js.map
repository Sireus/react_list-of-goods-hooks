{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sort","goodsFromServer","App","useState","selectedSort","setSelectedSort","isReverse","setIsReverse","sortedGoods","SORT_ABC","sort","good1","good2","localeCompare","SORT_LENGTH","length","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mEAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,8BAAAA,M,KAKE,IAAME,EAAgB,WAC3B,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACIC,EAAW,UAAOP,GAEtB,GAAIG,EAAc,CAChB,OAAQA,GACN,KAAKJ,EAAKS,SACRD,EAAcA,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAC7BD,EAAME,cAAcD,MAEtB,MAEF,KAAKZ,EAAKc,YACRN,EAAcA,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAC7BD,EAAMI,OAASH,EAAMG,UAQvBT,GACFE,EAAYQ,WAIXZ,GAAgBE,GACnBE,EAAYQ,UAQd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SAAU,UACX,CAAE,WAAYf,IAAiBJ,EAAKS,WAExCW,QAAS,kBAAMf,EAAgBL,EAAKS,WANtC,iCAWA,wBACES,KAAK,SACLD,UACEE,IAAG,SAAU,aACX,CAAE,WAAYf,IAAiBJ,EAAKc,cAExCM,QAAS,kBAAMf,EAAgBL,EAAKc,cANtC,4BAWA,wBACEI,KAAK,SACLD,UACEE,IAAG,SAAU,aACX,CAAE,YAAab,IAEnBc,QAAS,kBAAMb,GAAcD,IAN/B,sBAWEF,GAAgBE,IAEd,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA9CE,WACZf,EAAgB,IAChBE,GAAa,IAyCL,sBAUN,6BACE,6BACGC,EAAYa,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC7GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4c4788a5.chunk.js","sourcesContent":["import cn from 'classnames';\n\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum Sort {\n  SORT_ABC = 'Sort ABC',\n  SORT_LENGTH = 'Sort by length',\n}\n\nexport const App: React.FC = () => {\n  const [selectedSort, setSelectedSort] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  let sortedGoods = [...goodsFromServer];\n\n  if (selectedSort) {\n    switch (selectedSort) {\n      case Sort.SORT_ABC:\n        sortedGoods = sortedGoods.sort((good1, good2) => (\n          good1.localeCompare(good2)\n        ));\n        break;\n\n      case Sort.SORT_LENGTH:\n        sortedGoods = sortedGoods.sort((good1, good2) => (\n          good1.length - good2.length\n        ));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReverse) {\n      sortedGoods.reverse();\n    }\n  }\n\n  if (!selectedSort && isReverse) {\n    sortedGoods.reverse();\n  }\n\n  const reset = () => {\n    setSelectedSort('');\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-info',\n              { 'is-light': selectedSort !== Sort.SORT_ABC })\n          }\n          onClick={() => setSelectedSort(Sort.SORT_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-success',\n              { 'is-light': selectedSort !== Sort.SORT_LENGTH })\n          }\n          onClick={() => setSelectedSort(Sort.SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-warning',\n              { 'is-light': !isReverse })\n          }\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(selectedSort || isReverse)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}